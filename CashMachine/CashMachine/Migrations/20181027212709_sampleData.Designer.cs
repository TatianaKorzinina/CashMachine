// <auto-generated />
using CashMachine;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CashMachine.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20181027212709_sampleData")]
    partial class sampleData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CashMachine.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount");

                    b.HasKey("AccountId");

                    b.ToTable("Accounts");

                    b.HasData(
                        new { AccountId = 1, Amount = 80000 }
                    );
                });

            modelBuilder.Entity("CashMachine.Money", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Quantity");

                    b.Property<int>("Value");

                    b.HasKey("Id");

                    b.ToTable("Money");

                    b.HasData(
                        new { Id = 1, Quantity = 50, Value = 500 },
                        new { Id = 2, Quantity = 50, Value = 1000 },
                        new { Id = 3, Quantity = 100, Value = 100 },
                        new { Id = 4, Quantity = 25, Value = 5000 }
                    );
                });
#pragma warning restore 612, 618
        }
    }
}
